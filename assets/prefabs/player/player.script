local gravity = -20

function init(self)
	msg.post(".", "acquire_input_focus")
	self.swordTaken = false
	self.posOfHand = vmath.vector3()
	self.velocity = vmath.vector3(0, 0, 0)
	self.onAir = false
	self.ground_contact = false
	self.sprinting = false
	self.ladder_contact = false
	self.climbing = false
	self.actions = {}
end

function final(self)
	msg.post(".", "release_input_focus")
end

function update(self, dt)
	local gravity = vmath.vector3(0, gravity, 0)
	self.posOfHand = go.get_position("#playerHand")

	if self.actions[hash("left")] then
		if self.sprinting then
			self.velocity.x = -200
		else
			self.velocity.x = -100
		end		
	elseif self.actions[hash("right")] then
		if self.sprinting then
			self.velocity.x = 200
		else
			self.velocity.x = 100
		end
	elseif self.actions[hash("left")] and self.actions[hash("sprint")] then
		self.velocity.x = -200
	elseif self.actions[hash("right")] and self.actions[hash("sprint")] then
		self.velocity.x = 200
	else
		self.velocity.x = 0
	end
	
	if not self.ground_contact then
		self.velocity = self.velocity + gravity
	end
	
	go.set_position(go.get_position() + self.velocity * dt)

	self.correction = vmath.vector3()
	self.sprinting = false
	self.ground_contact = false
	self.ladder_contact = false
end

local function handle_geometry_contact(self, normal, distance)
	local proj = vmath.dot(self.correction, normal)
	local comp = (distance - proj) * normal
	self.correction = self.correction + comp
	go.set_position(go.get_position() + comp)
	if normal.y > 0.7 then
		self.ground_contact = true
	end
	proj = vmath.dot(self.velocity, normal)
	if proj < 0 then
		self.velocity = self.velocity - proj * normal
		self.velocity.x = 0
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("contact_point_response") then
		if message.group == hash("ground") then
			handle_geometry_contact(self, message.normal, message.distance)
		elseif message.group == hash("weapon") then
			msg.post("/sword#sword", "delete")
			self.swordTaken = true
		end
	end
end

function on_input(self, action_id, action)
	local status = " "
	if not self.swordTaken then
		status = "normal_"
	else
		status = "sword_"
	end 
	if action_id == hash("left") and not (action_id == hash("right")) then
		self.actions[action_id] = true
		if action.pressed then
			msg.post("#sprite", "play_animation", {id = hash(status .. "walk_left")})
		elseif action.released then
			self.actions[action_id] = nil
			msg.post("#sprite", "play_animation", {id = hash(status .. "idle_left")})
		end
	elseif action_id == hash("right") and not (action_id == hash("left")) then
		self.actions[action_id] = true
		if action.pressed then
			msg.post("#sprite", "play_animation", {id = hash(status .. "walk_right")})
		elseif action.released then
			self.actions[action_id] = nil
			msg.post("#sprite", "play_animation", {id = hash(status .. "idle_right")})
		end
	elseif action_id == hash("sprint") then
		self.sprinting = true
	elseif action_id == hash("up") and action.pressed then
		if not self.ground_contact then
			self.onAir = trues
		else
			self.onAir = false
		end
		if not self.onAir then
			self.velocity.y = 500
		end
	end
end
